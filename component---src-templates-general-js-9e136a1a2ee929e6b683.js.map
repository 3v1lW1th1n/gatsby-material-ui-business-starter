{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack:///./src/templates/general.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js"],"names":["Card","props","ref","classes","className","_props$raised","raised","other","root","elevation","overflow","name","MEDIA_COMPONENTS","CardMedia","children","_props$component","component","Component","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","undefined","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","query","withRoot","withStyles","cardMedia","height","data","markdownRemark","frontmatter","title","publicURL","html","withPrefix","gutterBottom","variant","dangerouslySetInnerHTML","__html","CardContent","padding","paddingBottom"],"mappings":"6FAAA,wFAaIA,EAAO,cAAiB,SAAcC,EAAOC,GAC/C,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoB,gBAAoB,IAAO,YAAS,CACtDG,UAAW,YAAKD,EAAQK,KAAMJ,GAC9BK,UAAWH,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA6BU,gBA9CK,CAElBC,KAAM,CACJE,SAAU,WA2CoB,CAChCC,KAAM,WADO,CAEZX,I,kCCvDH,sFA4BIY,EAAmB,CAAC,QAAS,QAAS,UAAW,SAAU,OAC3DC,EAAY,cAAiB,SAAmBZ,EAAOC,GACzD,IAAIY,EAAWb,EAAMa,SACjBX,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBW,EAAmBd,EAAMe,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAQjB,EAAMiB,MACdC,EAAMlB,EAAMkB,IACZC,EAAQnB,EAAMmB,MACdb,EAAQ,YAAyBN,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,QAAS,MAAO,UAE1GoB,GAA4D,IAAzCT,EAAiBU,QAAQL,GAC5CM,GAAiBF,GAAoBH,EAAQ,YAAS,CACxDM,gBAAiB,QAASC,OAAOP,EAAO,OACvCE,GAASA,EACZ,OAAoB,gBAAoBH,EAAW,YAAS,CAC1Db,UAAW,YAAKD,EAAQK,KAAMJ,EAAWiB,GAAoBlB,EAAQuB,OAA6C,IAAtC,cAAcJ,QAAQL,IAAqBd,EAAQwB,KAC/HzB,IAAKA,EACLkB,MAAOG,EACPJ,IAAKE,EAAmBH,GAASC,OAAMS,GACtCrB,GAAQO,MAkDE,gBA3FK,CAElBN,KAAM,CACJqB,QAAS,QACTC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,UAItBN,MAAO,CACLO,MAAO,QAITN,IAAK,CAEHO,UAAW,UA0EmB,CAChCvB,KAAM,gBADO,CAEZE,I,oCCrGH,kLA2CasB,EAAK,aAeHC,sBAASC,YA9CT,CACbC,UAAW,CACTC,OAAQ,UA4CYF,EAxCT,SAAC,GAAuB,IAArBlC,EAAoB,EAApBA,QAASqC,EAAW,EAAXA,KAAW,EAIhCA,EAAKC,eAAeC,YAFtBC,EAFkC,EAElCA,MACSC,EAHyB,EAGlC1B,MAAS0B,UAEHC,EAASL,EAAKC,eAAdI,KACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKF,MAAOA,IACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEvC,UAAWD,EAAQmC,UACnBpB,MAAO4B,YAAWF,KAEpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY5B,UAAU,KAAK+B,cAAY,EAACC,QAAQ,MAC7CL,GAEH,kBAAC,IAAD,CAAYM,wBAAyB,CAAEC,OAAQL,a,oCCpCzD,4EAeIM,EAAc,cAAiB,SAAqBlD,EAAOC,GAC7D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBW,EAAmBd,EAAMe,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDR,EAAQ,YAAyBN,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoB,gBAAoBgB,EAAW,YAAS,CAC1Db,UAAW,YAAKD,EAAQK,KAAMJ,GAC9BF,IAAKA,GACJK,OAyBU,gBA5CK,CAElBC,KAAM,CACJ4C,QAAS,GACT,eAAgB,CACdC,cAAe,MAuCa,CAChC1C,KAAM,kBADO,CAEZwC","file":"component---src-templates-general-js-9e136a1a2ee929e6b683.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import \"core-js/modules/es6.array.index-of\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Component for rendering image.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import withRoot from \"../utils/withRoot\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport SEO from \"../components/SEO\";\nimport Page from \"../components/Page\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withPrefix } from \"gatsby\";\nimport withStyles from \"@material-ui/styles/withStyles\";\n\nconst styles = {\n  cardMedia: {\n    height: \"200px\",\n  },\n};\n\nconst Detail = ({ classes, data }) => {\n  const {\n    title,\n    image: { publicURL },\n  } = data.markdownRemark.frontmatter;\n  const { html } = data.markdownRemark;\n  return (\n    <Page>\n      <SEO title={title} />\n      <Card>\n        <CardMedia\n          className={classes.cardMedia}\n          image={withPrefix(publicURL)}\n        />\n        <CardContent>\n          <Typography component=\"h2\" gutterBottom variant=\"h2\">\n            {title}\n          </Typography>\n          <Typography dangerouslySetInnerHTML={{ __html: html }} />\n        </CardContent>\n      </Card>\n    </Page>\n  );\n};\n\nexport const query = graphql`\n  query($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        image {\n          publicURL\n        }\n        title\n        path\n      }\n      html\n    }\n  }\n`;\n\nexport default withRoot(withStyles(styles)(Detail));\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);"],"sourceRoot":""}