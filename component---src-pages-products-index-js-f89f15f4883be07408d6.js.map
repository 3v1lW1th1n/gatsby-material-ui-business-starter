{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./src/components/List.js","webpack:///./src/pages/products/index.js","webpack:///./node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js"],"names":["Card","props","ref","classes","className","_props$raised","raised","other","root","elevation","overflow","name","withStyles","cardMedia","height","Grid","alignItems","container","direction","justify","spacing","items","map","edge","node","excerpt","frontmatter","path","title","publicURL","image","item","key","md","xs","CardMedia","withPrefix","CardContent","Typography","component","gutterBottom","variant","to","query","withRoot","products","data","allMarkdownRemark","edges","Page","SEO","MEDIA_COMPONENTS","children","_props$component","Component","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","undefined","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","padding","paddingBottom"],"mappings":"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","file":"component---src-pages-products-index-js-f89f15f4883be07408d6.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withPrefix } from \"gatsby\";\nimport withStyles from \"@material-ui/styles/withStyles\";\n\nconst styles = {\n  cardMedia: {\n    height: \"200px\",\n  },\n};\n\nconst List = (props) => {\n  const { classes } = props;\n  return (\n    <Grid\n      alignItems=\"flex-start\"\n      container\n      direction=\"row\"\n      justify=\"center\"\n      spacing={8}\n    >\n      {props.items.map((edge) => {\n        const {\n          node: {\n            excerpt,\n            frontmatter: {\n              path,\n              title,\n              image: { publicURL },\n            },\n          },\n        } = edge;\n        return (\n          <Grid item key={path} md={6} xs={12}>\n            <Card>\n              <CardMedia\n                className={classes.cardMedia}\n                image={withPrefix(publicURL)}\n              />\n              <CardContent>\n                <Typography component=\"h2\" gutterBottom variant=\"h5\">\n                  <Link to={path}>{title}</Link>\n                </Typography>\n                <Typography component=\"p\">{excerpt}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(List);\n","import withRoot from \"../../utils/withRoot\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport SEO from \"../../components/SEO\";\nimport Page from \"../../components/Page\";\nimport List from \"../../components/List\";\n\nconst Products = (props) => {\n  const products = props.data.allMarkdownRemark.edges;\n  return (\n    <Page title=\"Products\">\n      <SEO title=\"Products\" />\n      <List items={products} />\n    </Page>\n  );\n};\n\nexport const query = graphql`\n  query ProductsQuery {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/products/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            image {\n              publicURL\n            }\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default withRoot(Products);\n","import \"core-js/modules/es6.array.index-of\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Component for rendering image.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);"],"sourceRoot":""}